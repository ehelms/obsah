---
- hosts: localhost
  connection: local
  tasks:
    - name: install required packages
      package:
        name: "{{ item }}"
        state: latest
      with_items:
        - koji
        - brewkoji
        - git-annex
        - quvi
        - tito
        - rhpkg
        - scl-utils
        - scl-utils-build

- hosts: packages
  serial: 1
  any_errors_fatal: false # don't bomb out the entire playbook if one host (i.e. package) fails
  tasks:
    - name: confirm package dir exists
      stat:
        path: "packages/{{ inventory_hostname }}"
      register: st

    - block:
      - set_fact:
          scl_enabled: "{{ inventory_hostname.startswith('tfm-') }}"

      - name: 'Lookup current version of package in RHEL7 tag'
        shell: "brew list-tagged --quiet satellite-{{ satellite_version }}-rhel-7-candidate {{ inventory_hostname }} | sort -r -k 1"
        register: latest_brewed_rhel7

      - name: 'Lookup current version of package in RHEL6 tag'
        shell: "brew list-tagged --quiet satellite-{{ satellite_version }}-rhel-6-candidate {{ inventory_hostname }} | sort -r -k 1"
        register: latest_brewed_rhel6

      - name: "Find spec file"
        find:
          pattern: "*.spec"
          path: "packages/{{ inventory_hostname }}"
        register: "spec_file"

      - set_fact:
          spec_file_path: "{{ spec_file.files[0].path }}"

      - name: 'Calculate EL7 RPM version in packaging'
        command: "rpmspec -q {{ spec_file_path }} --define 'dist .el7sat' --define 'scl_prefix tfm-' --queryformat='%{name}-%{version}-%{release}\n' --srpm"
        register: packaging_rhel7_rpm

      - name: 'Calculate EL6 RPM version in packaging'
        command: "rpmspec -q {{ spec_file_path }} --define 'dist .el6sat' --define 'scl_prefix {{ 'tfm-' if scl_enabled else '' }}' --queryformat='%{name}-%{version}-%{release}\n' --srpm"
        register: packaging_rhel6_rpm

      - set_fact:
          latest_brewed_rhel6_pkg: "{{ latest_brewed_rhel6.stdout.split(' ')[0] }}"
          latest_brewed_rhel7_pkg: "{{ latest_brewed_rhel7.stdout.split(' ')[0] }}"
          packaging_rhel6_pkg: "{{ packaging_rhel6_rpm.stdout }}"
          packaging_rhel7_pkg: "{{ packaging_rhel7_rpm.stdout }}"

      - block:
        - debug:
            msg: "Mismatch found for EL6: {{ latest_brewed_rhel6_pkg }} {{ packaging_rhel6_pkg }}"
          when: latest_brewed_rhel6_pkg != packaging_rhel6_pkg

        - debug:
            msg: "Mismatch found for EL7: {{ latest_brewed_rhel7_pkg }} {{ packaging_rhel7_pkg }}"
          when: latest_brewed_rhel7_pkg != packaging_rhel7_pkg

        - name: 'Run setup_sources'
          shell: "./setup_sources.sh {{ inventory_hostname }}"
          args:
            chdir: "packages"

        - name: 'Release to brew'
          shell: "tito release {{ releaser }} -y"
          args:
            chdir: "packages/{{ inventory_hostname }}"
          register: brew_release

        - debug:
            msg: "{{ brew_release.stdout.split('\n') }}"
          when: brew_release | succeeded

        - debug:
            msg: "{{ brew_release.stderr.split('\n') }}"
          when: brew_release | failed

        when: latest_brewed_rhel6_pkg != packaging_rhel6_pkg or latest_brewed_rhel7_pkg != packaging_rhel7_pkg # block
      when: st.stat.exists # block
